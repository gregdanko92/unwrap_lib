
/// For development purposes

Test 0 : Reset System

curl -X POST http://localhost:3000/api/reset

Test 1: Add a book

curl -X POST http://localhost:3000/api/books \
  -H "Content-Type: application/json" \
  -d '{
    "title": "Anarchy, State, and Utopia",
    "author": "Robert Nozick",
    "isbn": "1111",
    "copies": 100
  }'


  Test 2: Get Book details

  curl -X GET http://localhost:3000/api/books/1111

  bonus: get all books --> curl -X GET http://localhost:3000/api/books

Test 3: Create new customer

curl -X POST http://localhost:3000/api/customers \
  -H "Content-Type: application/json" \
  -d '{
    "name": "Greg Danko",
    "email": "gregdanko@email.com",
    "customer_id": "CUST002"
  }'

Test 4: Get Customer details

curl -X GET http://localhost:3000/api/customers/CUST002

Test 5: Test Checkout
    note: make sure there's a valid customer with custoemr_id and a book with isbn first

DUE_DATE=$(date -v+14d "+%Y-%m-%d") 

curl -X POST http://localhost:3000/api/checkouts \
  -H "Content-Type: application/json" \
  -d "{
    \"isbn\": \"1111\",
    \"customer_id\": \"CUST002\",
    \"due_date\": \"$DUE_DATE\"
  }"

Test 6: Get Customer's checked out booked
curl -X GET http://localhost:3000/api/customers/CUST002/books

Test 7: return a book

curl -X POST http://localhost:3000/api/returns \
  -H "Content-Type: application/json" \
  -d '{
    "isbn": "1111",
    "customer_id": "CUST002"
  }'

//////\\\\\\\

Edge Cases to Test

// Add Book Edge Cases

1. Missing field(s) --> 400 "error":"title, author, isbn, and copies are required"

curl -X POST http://localhost:3000/api/books \
  -H "Content-Type: application/json" \
  -d '{
    "title": "Incomplete Book",
    "author": "Some Author"
  }'

2. Add a book with 0 copies --> 400 "error":"copies must be a positive integer"

curl -X POST http://localhost:3000/api/books \
  -H "Content-Type: application/json" \
  -d '{
    "title": "Bad Book",
    "author": "Bad Author",
    "isbn": "BADISBN",
    "copies": 0
  }'

3. Add a duplicate ISBN, run the normal addBook, then again --> 400 Error "error":"Book with this ISBN already exists"

/////
Create a customer edge Cases

1. Missing Field(s) --> 400 error

curl -X POST http://localhost:3000/api/customers \
  -H "Content-Type: application/json" \
  -d '{
    "name": "No Email"
  }'

2. Duplicate customer id, use the normal add customer, do it again --> 400 {"error":"Customer with this ID already exists"}% 

/////


Checkout Edge Cases

1. Checkout book that does not exist --> 404 error "error":"Book not found"

curl -X POST http://localhost:3000/api/checkouts \
  -H "Content-Type: application/json" \
  -d '{
    "isbn": "NONEXISTENTISBN",
    "customer_id": "CUST001",
    "due_date": "2025-07-01"
  }'

  2. Checkout customer that does not exist --> 404 Error "error":"Customer not found"

  curl -X POST http://localhost:3000/api/checkouts \
  -H "Content-Type: application/json" \
  -d '{
    "isbn": "9780743273565",
    "customer_id": "NONEXISTENTCUST",
    "due_date": "2025-07-01"
  }'

  3. Checkout with no available copies, make a book with 1 copy, check it out, try to check it out again with a different customer id (that is registered) --> 400 error "error":"No available copies for this book"

  4. Checkout more than 5 books --> create customer, checkout 5 different books, on 6th book --> 400 error {"error":"Customer cannot check out more than 5 books"}  

  5. Checkout the same book for the same customer without returning --> 400 "error":"Customer has already checked out this book"   

  6. Get books for a customer with no books --> returns []

  curl -X GET http://localhost:3000/api/customers/CUST001/books

  7. Get books for a customer that doesn't exist --> returns []

  curl -X GET http://localhost:3000/api/customers/NONEXISTENTCUST/books

  /////
  Return book edge Cases
  1. Return a book that is not checked out --> 400 error:"Checkout record not found"

  curl -X POST http://localhost:3000/api/returns \
  -H "Content-Type: application/json" \
  -d '{
    "isbn": "8989898989989",
    "customer_id": "CUST001"
  }'

  2. Return for a customer that doesn't exist yet --> 400  error:"Checkout record not found"}%

  curl -X POST http://localhost:3000/api/returns \
  -H "Content-Type: application/json" \
  -d '{
    "isbn": "4444444",
    "customer_id": "NONEXISTENTCUST"
  }'

  3. Return a book that doesn't exist --> 400 error :Checkout record not found"}%                                                                                                                                                                 
  curl -X POST http://localhost:3000/api/returns \
  -H "Content-Type: application/json" \
  -d '{
    "isbn": "NONEXISTENTISBN",
    "customer_id": "CUST002"
  }'